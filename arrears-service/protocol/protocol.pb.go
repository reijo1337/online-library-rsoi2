// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protocol.proto

package protocol

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Arrear struct {
	ID                   int32    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	ReaderID             int32    `protobuf:"varint,2,opt,name=ReaderID,proto3" json:"ReaderID,omitempty"`
	BookID               int32    `protobuf:"varint,3,opt,name=BookID,proto3" json:"BookID,omitempty"`
	Start                string   `protobuf:"bytes,4,opt,name=Start,proto3" json:"Start,omitempty"`
	End                  string   `protobuf:"bytes,5,opt,name=End,proto3" json:"End,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Arrear) Reset()         { *m = Arrear{} }
func (m *Arrear) String() string { return proto.CompactTextString(m) }
func (*Arrear) ProtoMessage()    {}
func (*Arrear) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{0}
}

func (m *Arrear) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Arrear.Unmarshal(m, b)
}
func (m *Arrear) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Arrear.Marshal(b, m, deterministic)
}
func (m *Arrear) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Arrear.Merge(m, src)
}
func (m *Arrear) XXX_Size() int {
	return xxx_messageInfo_Arrear.Size(m)
}
func (m *Arrear) XXX_DiscardUnknown() {
	xxx_messageInfo_Arrear.DiscardUnknown(m)
}

var xxx_messageInfo_Arrear proto.InternalMessageInfo

func (m *Arrear) GetID() int32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Arrear) GetReaderID() int32 {
	if m != nil {
		return m.ReaderID
	}
	return 0
}

func (m *Arrear) GetBookID() int32 {
	if m != nil {
		return m.BookID
	}
	return 0
}

func (m *Arrear) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

func (m *Arrear) GetEnd() string {
	if m != nil {
		return m.End
	}
	return ""
}

type PagingArrears struct {
	ID                   int32    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Size                 int32    `protobuf:"varint,2,opt,name=Size,proto3" json:"Size,omitempty"`
	Page                 int32    `protobuf:"varint,3,opt,name=Page,proto3" json:"Page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PagingArrears) Reset()         { *m = PagingArrears{} }
func (m *PagingArrears) String() string { return proto.CompactTextString(m) }
func (*PagingArrears) ProtoMessage()    {}
func (*PagingArrears) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{1}
}

func (m *PagingArrears) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PagingArrears.Unmarshal(m, b)
}
func (m *PagingArrears) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PagingArrears.Marshal(b, m, deterministic)
}
func (m *PagingArrears) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PagingArrears.Merge(m, src)
}
func (m *PagingArrears) XXX_Size() int {
	return xxx_messageInfo_PagingArrears.Size(m)
}
func (m *PagingArrears) XXX_DiscardUnknown() {
	xxx_messageInfo_PagingArrears.DiscardUnknown(m)
}

var xxx_messageInfo_PagingArrears proto.InternalMessageInfo

func (m *PagingArrears) GetID() int32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *PagingArrears) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *PagingArrears) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

type NewArrear struct {
	ReaderID             int32    `protobuf:"varint,1,opt,name=ReaderID,proto3" json:"ReaderID,omitempty"`
	BookID               int32    `protobuf:"varint,2,opt,name=BookID,proto3" json:"BookID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewArrear) Reset()         { *m = NewArrear{} }
func (m *NewArrear) String() string { return proto.CompactTextString(m) }
func (*NewArrear) ProtoMessage()    {}
func (*NewArrear) Descriptor() ([]byte, []int) {
	return fileDescriptor_2bc2336598a3f7e0, []int{2}
}

func (m *NewArrear) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewArrear.Unmarshal(m, b)
}
func (m *NewArrear) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewArrear.Marshal(b, m, deterministic)
}
func (m *NewArrear) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewArrear.Merge(m, src)
}
func (m *NewArrear) XXX_Size() int {
	return xxx_messageInfo_NewArrear.Size(m)
}
func (m *NewArrear) XXX_DiscardUnknown() {
	xxx_messageInfo_NewArrear.DiscardUnknown(m)
}

var xxx_messageInfo_NewArrear proto.InternalMessageInfo

func (m *NewArrear) GetReaderID() int32 {
	if m != nil {
		return m.ReaderID
	}
	return 0
}

func (m *NewArrear) GetBookID() int32 {
	if m != nil {
		return m.BookID
	}
	return 0
}

func init() {
	proto.RegisterType((*Arrear)(nil), "protocol.Arrear")
	proto.RegisterType((*PagingArrears)(nil), "protocol.PagingArrears")
	proto.RegisterType((*NewArrear)(nil), "protocol.NewArrear")
}

func init() { proto.RegisterFile("protocol.proto", fileDescriptor_2bc2336598a3f7e0) }

var fileDescriptor_2bc2336598a3f7e0 = []byte{
	// 249 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x4f, 0xce, 0xcf, 0xd1, 0x03, 0x33, 0x84, 0x38, 0x60, 0x7c, 0xa5, 0x12, 0x2e, 0x36, 0xc7,
	0xa2, 0xa2, 0xd4, 0xc4, 0x22, 0x21, 0x3e, 0x2e, 0x26, 0x4f, 0x17, 0x09, 0x46, 0x05, 0x46, 0x0d,
	0xd6, 0x20, 0x26, 0x4f, 0x17, 0x21, 0x29, 0x2e, 0x8e, 0xa0, 0xd4, 0xc4, 0x94, 0xd4, 0x22, 0x4f,
	0x17, 0x09, 0x26, 0xb0, 0x28, 0x9c, 0x2f, 0x24, 0xc6, 0xc5, 0xe6, 0x94, 0x9f, 0x9f, 0xed, 0xe9,
	0x22, 0xc1, 0x0c, 0x96, 0x81, 0xf2, 0x84, 0x44, 0xb8, 0x58, 0x83, 0x4b, 0x12, 0x8b, 0x4a, 0x24,
	0x58, 0x14, 0x18, 0x35, 0x38, 0x83, 0x20, 0x1c, 0x21, 0x01, 0x2e, 0x66, 0xd7, 0xbc, 0x14, 0x09,
	0x56, 0xb0, 0x18, 0x88, 0xa9, 0xe4, 0xce, 0xc5, 0x1b, 0x90, 0x98, 0x9e, 0x99, 0x97, 0x0e, 0xb1,
	0xbb, 0x18, 0xc3, 0x72, 0x21, 0x2e, 0x96, 0xe0, 0xcc, 0xaa, 0x54, 0xa8, 0xc5, 0x60, 0x36, 0x48,
	0x2c, 0x20, 0x31, 0x3d, 0x15, 0x6a, 0x25, 0x98, 0xad, 0x64, 0xcf, 0xc5, 0xe9, 0x97, 0x5a, 0x0e,
	0xf5, 0x01, 0xb2, 0x8b, 0x19, 0x71, 0xba, 0x98, 0x09, 0xd9, 0xc5, 0x46, 0x13, 0x18, 0xb9, 0xd8,
	0x61, 0x8e, 0x70, 0xe7, 0x12, 0x73, 0x4f, 0x2d, 0x01, 0x99, 0x9b, 0x02, 0xd1, 0x57, 0x0c, 0x93,
	0x11, 0xd7, 0x83, 0x07, 0x20, 0x8a, 0xbb, 0xa5, 0x04, 0x10, 0x12, 0x10, 0x21, 0x25, 0x06, 0x03,
	0x46, 0x21, 0x1b, 0x2e, 0xc1, 0xa0, 0xd4, 0xf4, 0xcc, 0xe2, 0x92, 0xd4, 0x22, 0x84, 0xeb, 0x84,
	0x11, 0x4a, 0xe1, 0x82, 0xd8, 0xf4, 0x27, 0xb1, 0x81, 0x85, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x94, 0x6c, 0x48, 0xeb, 0xb5, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ArrearsClient is the client API for Arrears service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ArrearsClient interface {
	GetPagedReadersArrears(ctx context.Context, in *PagingArrears, opts ...grpc.CallOption) (Arrears_GetPagedReadersArrearsClient, error)
	RegisterNewArrear(ctx context.Context, in *NewArrear, opts ...grpc.CallOption) (*Arrear, error)
}

type arrearsClient struct {
	cc *grpc.ClientConn
}

func NewArrearsClient(cc *grpc.ClientConn) ArrearsClient {
	return &arrearsClient{cc}
}

func (c *arrearsClient) GetPagedReadersArrears(ctx context.Context, in *PagingArrears, opts ...grpc.CallOption) (Arrears_GetPagedReadersArrearsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Arrears_serviceDesc.Streams[0], "/protocol.Arrears/GetPagedReadersArrears", opts...)
	if err != nil {
		return nil, err
	}
	x := &arrearsGetPagedReadersArrearsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Arrears_GetPagedReadersArrearsClient interface {
	Recv() (*Arrear, error)
	grpc.ClientStream
}

type arrearsGetPagedReadersArrearsClient struct {
	grpc.ClientStream
}

func (x *arrearsGetPagedReadersArrearsClient) Recv() (*Arrear, error) {
	m := new(Arrear)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *arrearsClient) RegisterNewArrear(ctx context.Context, in *NewArrear, opts ...grpc.CallOption) (*Arrear, error) {
	out := new(Arrear)
	err := c.cc.Invoke(ctx, "/protocol.Arrears/RegisterNewArrear", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ArrearsServer is the server API for Arrears service.
type ArrearsServer interface {
	GetPagedReadersArrears(*PagingArrears, Arrears_GetPagedReadersArrearsServer) error
	RegisterNewArrear(context.Context, *NewArrear) (*Arrear, error)
}

func RegisterArrearsServer(s *grpc.Server, srv ArrearsServer) {
	s.RegisterService(&_Arrears_serviceDesc, srv)
}

func _Arrears_GetPagedReadersArrears_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PagingArrears)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ArrearsServer).GetPagedReadersArrears(m, &arrearsGetPagedReadersArrearsServer{stream})
}

type Arrears_GetPagedReadersArrearsServer interface {
	Send(*Arrear) error
	grpc.ServerStream
}

type arrearsGetPagedReadersArrearsServer struct {
	grpc.ServerStream
}

func (x *arrearsGetPagedReadersArrearsServer) Send(m *Arrear) error {
	return x.ServerStream.SendMsg(m)
}

func _Arrears_RegisterNewArrear_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewArrear)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArrearsServer).RegisterNewArrear(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protocol.Arrears/RegisterNewArrear",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArrearsServer).RegisterNewArrear(ctx, req.(*NewArrear))
	}
	return interceptor(ctx, in, info, handler)
}

var _Arrears_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protocol.Arrears",
	HandlerType: (*ArrearsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterNewArrear",
			Handler:    _Arrears_RegisterNewArrear_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetPagedReadersArrears",
			Handler:       _Arrears_GetPagedReadersArrears_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "protocol.proto",
}
